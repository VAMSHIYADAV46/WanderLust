<% layout('/layouts/boilerplate') -%>

  <body>
    <div class="row">
      <div class="col-8 offset-2">
        <h3>
          <p class="card-text"><b>&nbsp;&nbsp;<%= listing.title %></b></p>
        </h3>
        <div class="card listing-card">
          <img src="<%= listing.image.url%>" class="card-img-top show-image" alt="listing_image">
          <div class="card-body"></div>
        </div>

        <ul>
          <li><b>Owned By:</b>
            <%= listing.owner.username %>
          </li>
          <li>
            <%= listing.description %>
          </li>
          <li>&#8377; <%= listing.price.toLocaleString("en-IN") %> / night</li>
          <li>
            <%= listing.location %>
          </li>
          <li>
            <%= listing.country %>
          </li>
        </ul>
        <br />

        <div class="button-container">
          <% if (currUser && currUser._id.equals(listing.owner._id)) { %>
            <a href="/listings/<%= listing._id %>/edit" class="btn submit-button">Edit this Listing</a>
            <form method="POST" action="/listings/<%= listing._id %>?_method=DELETE" class="d-inline">
              <button type="submit" class="btn btn-warning delete-button">Delete this Listing</button>
            </form>
            <% } %>
              <button class="btn back-button" onclick="window.location.href='/listings'">Back</button>
        </div>


        <div>
          <% if (currUser) { %>
            <hr>
            <h4>Leave a Review</h4>
            <form action="/listings/<%= listing._id %>/reviews" method="post" novalidate class="needs-validation">
              <fieldset class="starability-basic">
                <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="0" checked
                  aria-label="No rating." />
                <input type="radio" id="first-rate1" name="review[rating]" value="1" />
                <label for="first-rate1" title="Terrible">1 star</label>
                <input type="radio" id="first-rate2" name="review[rating]" value="2" />
                <label for="first-rate2" title="Not good">2 stars</label>
                <input type="radio" id="first-rate3" name="review[rating]" value="3" />
                <label for="first-rate3" title="Average">3 stars</label>
                <input type="radio" id="first-rate4" name="review[rating]" value="4" />
                <label for="first-rate4" title="Very good">4 stars</label>
                <input type="radio" id="first-rate5" name="review[rating]" value="5" />
                <label for="first-rate5" title="Amazing">5 stars</label>
              </fieldset>

              <div>
                <label for="comment" class="form-label">Comment</label>
                <textarea name="review[comment]" id="comment" cols="30" rows="5" class="form-control mb-3"
                  required></textarea>
                <div class="invalid-feedback mb-3">Please enter a comment.</div>
              </div>
              <button type="submit" class="btn-outline-dark sbtn btn">Submit</button>
            </form>

            <% } %>
        </div>

        <div class="row">
          <% if (listing.reviews.length> 0) { %>
            <hr>
            <h4><b>All Reviews</b></h4>
            <% for (review of listing.reviews) { %>
              <div class="card mb-3 ms-3 col-5">
                <div class="card-body">
                  <h5 class="card-title author-name">@<%= review.author.username %>
                  </h5>
                  <p class="starability-result" data-rating="<%= review.rating %>"></p>
                  <p class="card-title">
                    <%= review.comment %>
                  </p>
                </div>
                <form action="/listings/<%= listing.id %>/reviews/<%= review.id %>?_method=DELETE" method="post">
                  <button class="btn btn-sm btn-dark mb-3">Delete</button>
                </form>
              </div>
              <% } %>
                <% } %>
        </div>

        <hr>
        <div class="map-container">
          <h4><b>Here's the Location</b></h4>
          <div id="map"></div>
          <script async defer
            src="https://maps.gomaps.pro/maps/api/js?key=<%= GOOGLE_API_KEY %>&libraries=geometry,places&callback=initMap">
            </script>
          <h6 style="color: rgba(0, 0, 0, 0.4); font-size: 12px; filter: blur(0.5px);">
            &nbsp;&nbsp;&nbsp;&nbsp;Exact location may vary
          </h6>
        </div>

      </div>
    </div>

    <script>
      async function getCoordinates(address) {
        const apiKey = '<%= LOCATIONIQ_ACCESS_TOKEN %>';
        const formattedAddress = encodeURIComponent(address.replace(/\n/g, ', ')); // Formatting address properly
        const url = `https://us1.locationiq.com/v1/search.php?key=${apiKey}&q=${encodeURIComponent(address)}&format=json`;
        try {
          const response = await fetch(url);
          const data = await response.json();
          if (data.length > 0) {
            console.log('Coordinates:', data[0].lat, data[0].lon);
            return { lat: parseFloat(data[0].lat), lng: parseFloat(data[0].lon) };
          } else {
            console.error('Location not found');
            return null;
          }
        } catch (error) {
          console.error('Error:', error);
          return null;
        }
      }

      async function initMap() {
        const listingAddress = "<%= listing.location %>"; // Fetch listing location
        const listingPosition = await getCoordinates(listingAddress);

        if (!listingPosition) {
          console.error("Failed to load map: Invalid coordinates.");
          return;
        }

        const map = new google.maps.Map(document.getElementById('map'), {
          center: listingPosition,
          zoom: 13
        });

        const marker = new google.maps.Marker({
          position: listingPosition,
          map: map
        });

        const infoWindow = new google.maps.InfoWindow({
          content: `<h6><%= listing.title %></h6>
          <p><%= listing.description %></p>`,
          disableAutoPan: true,
          maxHeight: 100,
          maxWidth: 400 // Adjust the width as needed
        });


        // ✅ Open popup when user clicks the marker
        marker.addListener("mouseover", () => {
          infoWindow.open(map, marker);
        });


        // Hide popup when mouse leaves the marker
        marker.addListener("mouseout", () => {
          infoWindow.close();
        });


        // ✅ Automatically open popup when map loads (Optional)
        // infoWindow.open(map, marker);
      }

    </script>
  </body>